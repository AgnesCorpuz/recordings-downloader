.tutorial{:data =>{:title=>'Download Recordings'}}
    .step{:data=>{:title=>'Introduction'}}
        :markdown
			This tutorial walks through the steps to download recordings in bulk within a given date interval.
            
			For this tutorial, we are going to use the PureCloud SDK.
	.step{:data=>{:title=>'Input'}}
        :markdown
			For this tutorial, we're going to obtain the credentials through a simple console input.
			
			We'll also ask for the date interval we're going to request the recordings from.
	.step{:data=>{:title=>'Configure SDK Settings'}}
        :markdown
			Next, we're going to configure our SDK setting by providing an access token which we'll use in processing our API calls.
			
			To obtain a token, we create a separate function to request it from PureCloud.
    .step{:data=>{:title=>'Obtain an Access Token'}}
        :markdown
            Start by making a POST call to https://login.mypurecloud.com/oauth/token to request a token.
            
			Some SDKs will include helper functions to obtain the token using the Client ID and Client Secret, while on other SDKs, the HTTP Request and Response needs to be manually handled to obtain the token.
			
			For this tutorial, we'll be using Client Credentials Grant Type as we won't need any user context in acquiring the desired information.
			
			More information about OAuth and Authorization could be found in the [documentation](https://developer.mypurecloud.com/api/rest/authorization/)
	.step{:data=>{:title=>'Instantiate APIs'}}
        :markdown
			We'll create an instance of Conversations API and Recording API and pass it to our methods that will request for the batch download.
			
			To get the recordings, we'll create 5 separate functions:
			* Get Conversation IDs within a date interval.
			* Use the Conversation IDs and request a batch download for the conversations.
			* Get all conversations with recordings.
			* Determine the file extension to be used depending on the conversation media.
			* Download recordings in a directory.
	.step{:data=>{:title=>'Get Conversation IDs'}}
        :markdown
            Before we can get the recordings within the date interval, we need to get the conversations that happened during the dates.
			
			Here we create a function to get all conversations with the date interval as the search criteria.
			
			The function should return the Conversation ID and the Media Type of the conversation which will be used in requesting the batch download of the recordings
    .step{:data=>{:title=>'Request Batch Recordings Download'}}
        :markdown
			Create a function that will get all recordings of the conversations.
			
			The function should return the Job ID which will be used to download the recordings.
	.step{:data=>{:title=>'Get Conversations with Recordings'}}
        :markdown
            Create a function that will filter through the Batch Job IDs.
			
			The function should only return conversations with recordings.
	.step{:data=>{:title=>'Get Recording Extension Based on Conversation Media'}}
        :markdown
            Create a function that will set the file extension based on the conversation media.
			
			The function should return .wav for voice and .txt for chat and email media types.
	.step{:data=>{:title=>'Download Recordings into a Directory'}}
        :markdown
            Create a function that will download each conversation recordings and save it in a directory.
			